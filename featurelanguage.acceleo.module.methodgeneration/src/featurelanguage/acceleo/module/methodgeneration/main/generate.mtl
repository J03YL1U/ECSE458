[comment encoding = UTF-8 /]
[module generate('http://www.featurelanguage.xtext/FeatureLanguage')/]

[query public getRoot(aFeatureLanguage : FeatureLanguage) : String = 
	aFeatureLanguage.properties->any(x : Property | x.oclIsTypeOf(ConceptProperty)).concept.name
/]

[template public generate(aFeatureLanguage : FeatureLanguage)]
[comment @main/]
[file('assetPlusFeatureList.java', false, 'UTF-8')]
[for (aFeature : Feature | aFeatureLanguage.features)]
public class [aFeature.concept.name/]{
	
	//Private Fields generation
	[generateButton(aFeature, aFeatureLanguage)/]
	[generateJavaFXTextField(aFeature, aFeatureLanguage)/]
[/for]

	//Method Generation
[for (aFeature : Feature | aFeatureLanguage.features)]
[if (aFeature.verb.toString().equalsIgnoreCase('Add'))]
	[add(aFeature, aFeatureLanguage)/]
[/if]
[/for]
}
[/file]
[/template]


[comment]Its ours ... ours[/comment]

[template public add(aFeature : Feature, aFeatureLanguage : FeatureLanguage)]
public void add[createName(aFeature)/](ActionEvent event){

	[generateGetters(aFeature, aFeatureLanguage)/]
	[checkErrors()/]	
}
[/template]

[template public createName(aFeature : Feature)]
[if ((not aFeature.characteristic.name.oclIsUndefined()) and (not aFeature.verb.toString().equalsIgnoreCase('Update')))]
[aFeature.characteristic.name.toUpperFirst()/][if (aFeature.verb.toString().equalsIgnoreCase('Add'))]To[/if][if ((aFeature.verb.toString().equalsIgnoreCase('Remove')) or (aFeature.verb.toString().equalsIgnoreCase('Display')))]From[/if][/if][aFeature.concept.name/]
[/template]

[template public generateGetters(aFeature : Feature, aFeatureLanguage : FeatureLanguage)]
[if (aFeature.verb.toString().equalsIgnoreCase('Add'))]
	[if (aFeature.characteristic.name.oclIsUndefined())]
[listCharacteristics(aFeature.concept, aFeatureLanguage)/][/if]
	[if (not aFeature.characteristic.name.oclIsUndefined())]
[findConceptKey(aFeature.concept, aFeatureLanguage)/], [findCharacteristicKey(aFeature.characteristic, aFeatureLanguage)/][/if][/if]
[/template]

[template public generateJavaFXTextField(aFeature : Feature, aFeatureLanguage : FeatureLanguage)]
[for (aCharacteristic : Characteristic | aFeature.concept.characteristics) separator ('\n')]
[if (not aCharacteristic.type.name.equalsIgnoreCase(getRoot(aFeatureLanguage)))]
@FXML 
private TextField [aCharacteristic.name.toLowerFirst()/]Field; 
[/if]
[/for]
[/template]

[template public generateButton(aFeature : Feature, aFeatureLanguage : FeatureLanguage)]
[if (aFeature.verb.toString().equalsIgnoreCase('Add'))]
@FXML 
private Button add[aFeature.concept.name/]Button;

@FXML
private Button cancel[aFeature.concept.name/]Button; 
[/if]
[/template]

[template public checkErrors(aFeature : Feature, aFeatureLanguage : FeatureLanguage)]
[if (aFeature.verb.toString().equalsIgnoreCase('Add'))]

[/if]
[/template]

[comment]Its ours ... ours[/comment]

[template public paramList(aFeature : Feature, aFeatureLanguage : FeatureLanguage)]
[if (aFeature.verb.toString().equalsIgnoreCase('Add'))]
	[if (aFeature.characteristic.name.oclIsUndefined())]
[listCharacteristics(aFeature.concept, aFeatureLanguage)/][/if]
	[if (not aFeature.characteristic.name.oclIsUndefined())]
[findConceptKey(aFeature.concept, aFeatureLanguage)/], [findCharacteristicKey(aFeature.characteristic, aFeatureLanguage)/][/if][/if]
[if (aFeature.verb.toString().equalsIgnoreCase('Remove'))]
	[if (aFeature.characteristic.name.oclIsUndefined())]
		[for (aKey : Key | aFeatureLanguage.keys)]
			[if (aKey.concept.name.equalsIgnoreCase(aFeature.concept.name))]
[aKey.characteristic.type.name/] [aKey.characteristic.name.toLowerFirst()/][/if][/for][/if]
	[if (not aFeature.characteristic.name.oclIsUndefined())]
[findConceptKey(aFeature.concept, aFeatureLanguage)/], [findCharacteristicKey(aFeature.characteristic, aFeatureLanguage)/][/if][/if]
[if (aFeature.verb.toString().equalsIgnoreCase('Update'))]
	[if (aFeature.characteristic.name.oclIsUndefined())] [comment should not happen/]
[listCharacteristics(aFeature.concept, aFeatureLanguage)/][/if]
	[if (not aFeature.characteristic.name.oclIsUndefined())]
		[for (aKey : Key | aFeatureLanguage.keys)]
			[if (aKey.concept.name.equalsIgnoreCase(aFeature.concept.name))]
[aKey.characteristic.type.name/] [aKey.characteristic.name.toLowerFirst()/], [aKey.characteristic.type.name/] new[aKey.characteristic.name.toUpperFirst()/][/if][/for][/if][/if]
[if (aFeature.verb.toString().equalsIgnoreCase('Display'))]
	[if (aFeature.characteristic.name.oclIsUndefined())] 
		[for (aKey : Key | aFeatureLanguage.keys)]
			[if (aKey.concept.name.equalsIgnoreCase(aFeature.concept.name))]
[aKey.characteristic.type.name/] [aKey.characteristic.name.toLowerFirst()/][/if][/for][/if]
	[if (not aFeature.characteristic.name.oclIsUndefined())]
[findConceptKey(aFeature.concept, aFeatureLanguage)/], [findCharacteristicKey(aFeature.characteristic, aFeatureLanguage)/][/if][/if]
[/template]

[template public listCharacteristics(aConcept : Concept, aFeatureLanguage : FeatureLanguage)]
[for (aCharacteristic : Characteristic | aConcept.characteristics)]
[if (not aCharacteristic.type.name.equalsIgnoreCase(getRoot(aFeatureLanguage)))]
[aCharacteristic.type.name/] [aCharacteristic.name.toLowerFirst()/] = [aCharacteristic.name.toLowerFirst()/]Field.getText();
[/if]
[/for]
[/template]

[template public findConceptKey(aConcept : Concept, aFeatureLanguage : FeatureLanguage)]
	[for (aKey : Key | aFeatureLanguage.keys)]
		[if (aKey.concept.name.equalsIgnoreCase(aConcept.name))]
[aKey.characteristic.type.name/] [aConcept.name.toLowerFirst()/][aKey.characteristic.name.toUpperFirst()/][/if]	[/for]
[/template]

[template public findCharacteristicKey(aCharacteristic : Characteristic, aFeatureLanguage : FeatureLanguage)]
	[for (aKey : Key | aFeatureLanguage.keys)]
		[if (aKey.concept.name.equalsIgnoreCase(aCharacteristic.type.name))]
[aKey.characteristic.type.name/] [aKey.characteristic.name.toLowerFirst()/][/if][/for]
[/template]
